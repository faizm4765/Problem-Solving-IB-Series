#include <bits/stdc++.h>
using namespace std;

#define pb push_back

void NSL(int a[],int n,vector<int> &left){
    
    stack<pair<int,int>> s;
    
    for(int i = 0;i < n;i++){
        
        if(s.size() == 0){
            left.pb(-1);
        }
        else if(s.size() > 0 and s.top().first < a[i]){
            left.pb(s.top().second);
        }
        else if(s.size() > 0 and s.top().first >= a[i]){
            while(s.size() > 0 and s.top().first >= a[i]){
                s.pop();
            }
            if(s.size() == 0){
                left.pb(-1);
            }else{
                left.pb(s.top().second);
            }
        }
        s.push({a[i],i});
    }
}


void NSR(int a[],int n,vector<int> &right){
    
    stack<pair<int,int>> s;
    
    for(int i = n - 1;i >= 0;i--){
        
        if(s.size() == 0){
            right.pb(n);
        }
        else if(s.size() > 0 and s.top().first < a[i]){
            right.pb(s.top().second);
        }
        else if(s.size() > 0 and s.top().first >= a[i]){
            while(s.size() > 0 and s.top().first >= a[i]){
                s.pop();
            }
            if(s.size() == 0){
                right.pb(n);
            }else{
                right.pb(s.top().second);
            }
        }
        s.push({a[i],i});
    }
    reverse(right.begin(),right.end());
}


int main() {
	//code
	
	int t;
	cin>>t;
	
	while(t--){
	    
	    int n;
	    cin>>n;
	    
	    int a[n],i;
	    
	    for(i = 0;i < n;i++){
	        cin>>a[i];
	    }
	    
	    vector<int> left;
	    vector<int> right;
	    
	    NSL(a,n,left);
	    NSR(a,n,right);
	    
	    vector<int> width(n,0);
	    
	    int ans = INT_MIN;
	    
	    for(i = 0;i < n;i++){
	        width[i] = right[i] - left[i] - 1;
	        if(width[i] * a[i] > ans){
	            ans = a[i] * width[i];
	        }
	    }
	    
	    cout<<ans;
	    cout<<"\n";
	}
	
	
	return 0;
}
