Sliding window maximum in subarray of size k (Deque approach)

Ex: n = 5 k = 3

I/P : 4 1 3 2 6
O/P : 4 3 6
-----------------------------------------------------------------------------------

#include <bits/stdc++.h>
using namespace std;

void go(int a[],int n,int k){
    
    int i;
    deque<int> q(k);
    for(i=0;i<k;i++){
        while(! q.empty() and a[i]>a[q.back()])
            q.pop_back();
            
        q.push_back(i);
    }
    
    for(;i<n;i++){
        cout<<a[q.front()]<<" ";
        while(!q.empty() and q.front()<=i-k)
            q.pop_front();
        while(!q.empty() and a[i]>=a[q.back()]){
            q.pop_back();
        }
        q.push_back(i);
    }
    cout<<a[q.front()];
    cout<<"\n";
}


int main() {

	int t;
	cin>>t;
	while(t--){
	    
	    int n,k;
	    cin>>n>>k;
	    int a[n],i;
	    for(i=0;i<n;i++)
	        cin>>a[i];
	    
	    go(a,n,k);
	}
	return 0;
}
