/* A binary tree node has data, pointer to left child
   and a pointer to right child  
struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int x){
        data = x;
        left = right = NULL;
    }
}; */
void printSpiral(Node *root)
{
    //Your code here
    stack<Node*>st1;
    stack<Node*>st2;
    st1.push(root);
    Node* temp=NULL;
    int i=1;
    while(1){
        int nodes1=st1.size();
        int nodes2=st2.size();
        if(nodes1==0 and nodes2==0)
            break;
        if(i&1){
            i=0;
            while(nodes1>0){
                temp=st1.top();
                st1.pop();
                cout<<temp->data<<" ";
                if(temp->right)
                    st2.push(temp->right);
                if(temp->left)
                    st2.push(temp->left);
                nodes1--;
            }
        }else{
            i=1;
            while(nodes2>0){
                temp=st2.top();
                st2.pop();
                cout<<temp->data<<" ";
                if(temp->left)
                    st1.push(temp->left);
                if(temp->right)
                    st1.push(temp->right);
                nodes2--;
            }
        }
    }
}
