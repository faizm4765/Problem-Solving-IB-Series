/*  Given an index k, return the kth row of the Pascal’s triangle.

Pascal’s triangle : To generate A[C] in row R, sum up A’[C] and A’[C-1] from previous row R - 1.

Example:

Input : k = 3

Return : [1,3,3,1]

NOTE : k is 0 based. k = 0, corresponds to the row [1]. 

*/

---------------------------------------------------------------------------------------------------------------------------


#define pb push_back

vector<int> Solution::getRow(int A) {
    int i = 0;
    vector<vector<int> > v1;
    while(i<=A){
        int j = 0;
        vector<int> v;
        v.pb(1);
        j++;
        if(i>1){
            while(j<i){
                v.pb(v1[i-1][j] + v1[i-1][j-1]);
                j++;
            }
        }
        if(i>0)
            v.pb(1);
        v1.pb(v);
        i++;
    }
    return v1[A];
}



















