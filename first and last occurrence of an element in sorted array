class Solution {
    
    int binarySearch(int[]nums,int target){
        
        int l = 0,h = nums.length-1;
        int index = -1,mid = 0;
        
        while(l <= h){
            
            mid = l + (h-l)/2;
            
            if(nums[mid] >= target){
                h = mid - 1;
            }else
                l = mid + 1;
            
            if(nums[mid] == target)
                index = mid;
            
        }
        
        return index;
    }
    
    int binarySearch1(int[]nums,int target){
        
        int l = 0,h = nums.length-1;
        int index = -1,mid = 0;
        
        while(l <= h){
            
            mid = l + (h-l)/2;
            
            if(nums[mid] <= target){
                l = mid + 1;
            }else
                h = mid - 1;
            
            if(nums[mid] == target)
                index = mid;
            
        }
        
        return index;
    }
    
        
    public int[] searchRange(int[] nums, int target) {
        
        int arr[] = new int[2];
        
        arr[0] = binarySearch(nums,target);
        arr[1] = binarySearch1(nums,target);
        
        return arr;
    }
}
